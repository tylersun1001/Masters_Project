# takes a test generated by rand_testgen.py as input.
# simulates the registers and memory.

class iss():
    def __init__(self, infile: str, outfile: str):
        self.infile = open(infile, "r")
        self.outfile = open(outfile, 'w')
        self.i_cache = []
        self.d_cache = [2**16]
        self.registers = [16]
        self.pc = 0

    def load_program(self):
        for instr in self.infile:
            self.i_cache.append(instr)


    def step(self):
        curr_instr = self.i_cache[self.pc]
